"use strict";

const tabs = require("sdk/tabs");
const {setTimeout} = require("sdk/timers");
const passwords = require("sdk/passwords");
const data =  require("sdk/self").data;

// redirects to https://apps.twitter.com/ after login
const TWITTER_APP_LOGIN_PAGE = "https://dev.twitter.com/user/login?destination=apps";

const TWITTER_ASSISTANT_APP_NAME_PREFIX = 'TAssistant';
const TWITTER_APP_NAME_MAX_LENGTH = 32;

function randomString(length){
    var chars = 'abcdefghijklmnopqrstuvwxyz0123456789';
    
    return Array(length).fill()
        .map(() => chars[ Math.floor(chars.length*Math.random()) ])
        .join('');
}

/*
<ul>
    <li><strong>Log you in</strong> with your Twitter login and password (if saved in your web browser) to <a target="_blank" href="https://dev.twitter.com/user/login?destination=home">https://dev.twitter.com/</a></li>
    <li><strong>Create a Twitter app</strong>
    <li><strong>Accept the</strong> <a target="_blank" href="https://dev.twitter.com/terms/api-terms">terms of services</a> ("Developer rules of the road")
    <li>When the app is created, the addon will <strong>fetch the "API key" and "API secret"</strong> from the "API keys" tab.
        </ul>

*/

module.exports = function(devTwitterUserCredentials){
    
    console.time('app creation');
    
    const tabP = new Promise((resolve, reject) => {
        tabs.once('open', resolve); // this looks racy. What if a tab opens before mine?
        tabs.open( TWITTER_APP_LOGIN_PAGE ); 
    });
    
    return tabP.then(tab => {
        // login to dev.twitter.com
        var loggedinP = new Promise((resolve, reject) => {
            tab.once('ready', () => {
                tab.attach({
                    contentScriptFile: data.url('createTwitterApp/fillInDevTwitterCredentials.js'),
                    contentScriptOptions: devTwitterUserCredentials
                });

                // Waiting for 'ready' is too long. Should catch a 2xx response on succesful login
                tab.once('ready', () => {
                    resolve(tab);
                });  
            })
        });

        // redirect to the app creation page
        var redirectedToAppCreationPageP = loggedinP.then(tab => {
            return new Promise( resolve => {
                console.log('setTimeout', typeof setTimeout)
                
                // change URL only after some time to leave some time to the server to know
                // the user is logged in to dev.twitter.com
                setTimeout(() => {
                    tab.url = 'https://apps.twitter.com/app/new';
                }, 15*1000);
                
                tab.once('ready', () => {
                    resolve(tab);
                });
            });
        })
        
        // fill in the app creation form and submit it
        var appCreatedP = redirectedToAppCreationPageP.then(tab => {
            
            var appName = TWITTER_ASSISTANT_APP_NAME_PREFIX + '-' + devTwitterUserCredentials.username + '-';
            appName = appName + randomString(TWITTER_APP_NAME_MAX_LENGTH - appName.length);
            
            tab.attach({
                contentScriptFile: data.url('createTwitterApp/fillInAppCreationForm.js'),
                contentScriptOptions: {
                    // needs to be globally unique and below 32 chars
                    name: appName, 
                    // 10-200 chars
                    description: 'Application automatically generated by the Twitter Assistant browser add-on. (private use only)', 
                    // maybe make this URL a documentation page to what's going on eventually
                    website: 'https://github.com/DavidBruant/Twitter-Assistant'
                    
                }
            });
            console.timeEnd('app creation');
        })
        
    });
    
    
};

